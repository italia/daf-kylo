apiVersion: v1
kind: ConfigMap
metadata:
  name: kylo-services
  namespace: default
data:
  application-context.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      #%L
      thinkbig-service-app
      %%
      Copyright (C) 2017 ThinkBig Analytics
      %%
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
      #L%
      -->

    <beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.springframework.org/schema/beans"
           xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd">

      <bean id="applicationConfig"
            class="com.thinkbiganalytics.server.KyloServerApplication"/>

      <context:component-scan base-package="com.thinkbiganalytics">
        <context:exclude-filter type="assignable"
                                expression="com.thinkbiganalytics.server.KyloServerApplication"/>
      </context:component-scan>

      <!-- Deprecate the use of the name component-context.xml in favor of plugin-context.xml.
          The latter more clearly states its purpose: how we identify and bootstrap a plugin's configuration.
          Leaving both in place for now. -->
      <import resource="classpath*:plugin/component-context.xml"/>
      <import resource="classpath*:plugin/plugin-context.xml"/>
      <import resource="classpath*:conf/*.xml"/>
      <import resource="classpath*:feed-manager/*.xml"/>

      <bean id="mainConfigurationClassPostProcessor"
            class="org.springframework.context.annotation.ConfigurationClassPostProcessor"/>
    </beans>
  application.properties: |-
    ###
    # #%L
    # thinkbig-service-app
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    ###
    # Other properties are in the services-app/application.properties
    #
    # Add extra profiles by setting "spring.profiles.active=<profile-name>" property on command line, e.g.
    # -Dspring.profiles.active=hdp24,gmail,cdh
    # Extra profiles will add to this set of profiles and override properties given in this file
    ### Indicate the NiFi version you are using with the correct spring profile.
    ###  - For NiFi 1.0.x:                      nifi-v1
    ###  - For NiFi 1.1.x:                      nifi-v1.1
    ###  - For NiFi 1.2.x or 1.3.x or 1.4.x:    nifi-v1.2
    spring.profiles.include=native,nifi-v1.2,auth-spark,auth-kylo,auth-ldap,search-esr,jms-activemq



    # Spring Datasource properties for spring batch and the default data source
    # NOTE: Cloudera default password for root access to mysql is "cloudera"
    #
    spring.datasource.url=jdbc:mysql://tba-mysql:3306/kylo
    spring.datasource.username=root
    spring.datasource.password=hadoop
    spring.datasource.maxActive=30
    spring.datasource.validationQuery=SELECT 1
    spring.datasource.testOnBorrow=true
    spring.datasource.driverClassName=org.mariadb.jdbc.Driver
    spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
    spring.jpa.open-in-view=true
    #
    #Postgres datasource configuration
    #
    #spring.datasource.url=jdbc:postgresql://localhost:5432/pipeline_db
    #spring.datasource.driverClassName=org.postgresql.Driver
    #spring.datasource.username=root
    #spring.datasource.password=thinkbig
    #spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

    # Entity-level access control. To enable, uncomment below line and set value as true.
    # WARNING: Enabling entity access control is a one-way operation; you will not be able
    # to set this poperty back to "false" once Kylo is started with this value as "true".
    #security.entity.access.controlled=false

    ###
    # Authentication settings:
    #
    # Currently available athentication/authorization Spring profiles:
    #   *  auth-kylo   - Users are authenticated if they exist in the Kylo user store and any
    #                    groups associated with the user are retrieved for access control.
    #                    This profile is usually used in conjuction with other auth profiles
    #                    (auth-ldap, auth-ad, etc.)
    #   *  auth-ldap   - authenticates users using LDAP and optionally loads any associated
    #                    user groups
    #   *  auth-ad     - authenticates users using Active Directory and loads any associated
    #                    user groups
    #   *  auth-simple - Uses authenticationService.username and authenticationService.password
    #                    for authentication (development only)
    #   *  auth-file   - Uses users.properties and roles.properties files for authentication
    #                    and role assignment (generally for development only)

    ## auth-file: If this profile is active then these optional properties may be used:

    security.auth.file.users=file:///opt/kylo/kylo-services/conf/users.properties
    security.auth.file.groups=file:///opt/kylo/kylo-services/conf/groups.properties
    security.auth.file.password.hash.enabled=false
    security.auth.file.password.hash.algorithm=MD5
    security.auth.file.password.hash.encoding=base64

    ## auth-simple: If this profile is active these authenticationService properties are used:

    #authenticationService.username=
    #authenticationService.password={cipher}
    #authenticationService.password=

    ## auth-ldap: If this profile is active then these properties should uncommented and updated appropriately

    security.auth.ldap.server.uri=ldap://idm.daf.gov.it:389/cn=users,cn=accounts,dc=daf,dc=gov,dc=it
    security.auth.ldap.server.authDn=uid=admin,cn=users,cn=accounts,dc=daf,dc=gov,dc=it
    security.auth.ldap.server.password=xxxxx
    ### user DN patterns are separated by '|'
    security.auth.ldap.authenticator.userDnPatterns=uid={0}
    security.auth.ldap.user.enableGroups=false
    security.auth.ldap.user.groupNameAttr=member
    security.auth.ldap.user.groupsBase=cn=groups,cn=accounts,dc=daf,dc=gov,dc=it

    ## auth-ad: If this profile is active then these properties should uncommented and updated appropriately

    #security.auth.ad.server.uri=ldap://idm.daf.gov.it
    #security.auth.ad.server.domain=cn=users,cn=accounts,dc=daf,dc=gov,dc=it
    #security.auth.ad.server.searchFilter=(&(objectClass=user)(sAMAccountName={1}))
    #security.auth.ad.user.enableGroups=true
    ## group attribute patterns are separated by '|'
    #security.auth.ad.user.groupAttributes=

    #
    # Server port
    #
    server.port=8420
    # server.port=8443
    ##### ADD IF SSL is needed
    ###
    #server.ssl.key-store=
    #server.ssl.key-store-password=
    #server.ssl.key-store-type=jks
    #server.ssl.trust-store=
    #server.ssl.trust-store-password=
    #server.ssl.trust-store-type=JKS

    #
    # General configuration - Note: Supported configurations include STANDALONE, BUFFER_NODE_ONLY, BUFFER_NODE, EDGE_NODE
    #
    application.mode=STANDALONE

    #
    # Turn on debug mode to display more verbose error messages in the UI
    #
    application.debug=true

    #
    # Prevents execution of jobs at startup.  Change to true, and the name of the job that should
    # be run at startup if we want that behavior
    #
    spring.batch.job.enabled=false
    spring.batch.job.names=


    #spring.jpa.show-sql=true
    #spring.jpa.hibernate.ddl-auto=validate


    metadata.datasource.driverClassName=${spring.datasource.driverClassName}
    metadata.datasource.url=${spring.datasource.url}
    metadata.datasource.username=${spring.datasource.username}
    metadata.datasource.password=${spring.datasource.password}
    metadata.datasource.validationQuery=SELECT 1
    metadata.datasource.testOnBorrow=true



    hive.userImpersonation.enabled=false
    hive.datasource.driverClassName=org.apache.hive.jdbc.HiveDriver
    hive.datasource.url=jdbc:hive2://master.platform.daf.gov.it:10000/default;principal=hive/master.platform.daf.gov.it@DAF.GOV.IT
    hive.datasource.username=daf
    hive.datasource.password=xxxxxx
    hive.datasource.validationQuery=show tables



    ##Also Clouder  url should be /metastore instead of /hive
    hive.metastore.datasource.driverClassName=org.postgresql.Driver
    hive.metastore.datasource.url=jdbc:postgresql://master/metastore
    #hive.metastore.datasource.url=jdbc:mysql://localhost:3306/metastore
    hive.metastore.datasource.username=hive
    hive.metastore.datasource.password=xxxxxx
    hive.metastore.datasource.validationQuery=SELECT 1
    hive.metastore.datasource.testOnBorrow=true

    modeshape.datasource.driverClassName=${spring.datasource.driverClassName}
    modeshape.datasource.url=${spring.datasource.url}
    modeshape.datasource.username=${spring.datasource.username}
    modeshape.datasource.password=${spring.datasource.password}
    modeshape.index.dir=/opt/kylo/modeshape/modeshape-local-index

    nifi.rest.host=tba-nifi
    nifi.rest.port=8080

    ###
    # NiFi Https configuration below
    #
    # Follow directions here: http://kylo.readthedocs.io/en/v0.8.2/how-to-guides/ConfigureNiFiWithSSL.html to setup certificates and properties in NiFi
    #
    ### The port should match the port found in the /opt/nifi/current/conf/nifi.properties (nifi.web.https.port)
    #nifi.rest.port=9443
    #nifi.rest.https=true
    #nifi.rest.useConnectionPooling=false
    #nifi.rest.truststorePath=
    #####the truststore password below needs to match that found in the nifi.properties file (nifi.security.truststorePasswd)
    #nifi.rest.truststorePassword=
    #nifi.rest.truststoreType=JKS
    #nifi.rest.keystorePath=
    ###value found in the .password file /opt/nifi/data/ssl/CN=kylo_OU=NIFI.password
    #nifi.rest.keystorePassword=
    #nifi.rest.keystoreType=PKCS12
    #

    kerberos.hive.kerberosEnabled=true
    kerberos.hive.hadoopConfigurationResources=/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml
    kerberos.hive.kerberosPrincipal=daf@DAF.GOV.IT
    kerberos.hive.keytabLocation=/etc/security/daf.keytab

    ## used to map Nifi Controller Service connections to the User Interface
    ## naming convention for the property is nifi.service.NIFI_CONTROLLER_SERVICE_NAME.NIFI_PROPERTY_NAME
    ##anything prefixed with nifi.service  will be used by the UI.  Replace Spaces with underscores and make it lowercase.
    nifi.service.mysql.database_user=root
    nifi.service.mysql.password=hadoop

    #Kylo MySQL controller service configuration
    nifi.service.kylo_mysql.database_user=root
    nifi.service.kylo_mysql.password=hadoop

    nifi.service.hive_thrift_service.database_connection_url=jdbc:hive2://master.platform.daf.gov.it:10000/default;principal=hive/master.platform.daf.gov.it@DAF.GOV.IT
    nifi.service.hive_thrift_service.kerberos_principal=nifi
    nifi.service.hive_thrift_service.kerberos_keytab=/usr/nifi/daf.keytab
    nifi.service.hive_thrift_service.hadoop_configuration_resources=/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml

    nifi.service.kylo_metadata_service.rest_client_url=http://tba-kylo-ui:8400/proxy/v1/metadata
    nifi.service.kylo_metadata_service.rest_client_password=thinkbig

    jms.client.id=thinkbig.feedmgr

    ## nifi Property override with static defaults
    ##Static property override supports 3 usecases
    # 1) store properties in the file starting with the prefix defined in the "PropertyExpressionResolver class"  default = config.
    # 2) store properties in the file starting with "nifi.<PROCESSORTYPE>.<PROPERTY_KEY>   where PROCESSORTYPE and PROPERTY_KEY are all lowercase and the spaces are substituted with underscore
    # 3) Global property replacement.  properties starting with "nifi.all_processors.<PROPERTY_KEY> will globally replace the value when the template is instantiated
    ##Below are Ambari configuration options for Hive Metastore and Spark location
    config.hive.schema=hive
    config.metadata.url=http://kylo-ui:8400/proxy/v1/metadata

    ## Spark configuration
    nifi.executesparkjob.sparkhome=/opt/cloudera/parcels/CDH/lib/spark
    nifi.executesparkjob.sparkmaster=yarn
    nifi.executesparkjob.driver_memory=1024m
    nifi.executesparkjob.number_of_executors=1
    nifi.executesparkjob.executor_cores=1
    ##comment the line below on cloudera
    #config.spark.validateAndSplitRecords.extraJars=/usr/hdp/current/hive-webhcat/share/hcatalog/hive-hcatalog-core.jar
    config.spark.version=1

    ## Specify to override the default HDFS locations for feed tables and multi-tenancy.

    # Root HDFS locations for new raw files
    config.hdfs.ingest.root=/app/tba/etl
    # Root Archive location for new raw files
    config.hdfs.archive.root=/app/tba/archive
    # Root HDFS location for Hive ingest processing tables (raw,valid,invalid)
    config.hive.ingest.root=/app/tba/model.db
    # Root HDFS location for Hive profile table
    config.hive.profile.root=/app/tba/model.db
    # Root HDFS location for Hive master table
    config.hive.master.root=/daf

    # Prefix to prepend to category system name for this environment (blank if none). Use for multi-tenancy
    config.category.system.prefix=

    # Set the JMS server hostname for the Kylo hosted JMS server
    config.elasticsearch.jms.url=tcp://tba-activemq:61616

    # Set the nifi home folder
    config.nifi.home=/usr/nifi


    #example of replacing global properties
    nifi.all_processors.kerberos_principal=daf@DAF.GOV.IT
    nifi.all_processors.kerberos_keytab=/usr/nifi/daf.keytab
    nifi.all_processors.hadoop_configuration_resources=/etc/hadoop/conf/core-site.xml,/etc/hadoop/conf/hdfs-site.xml


    ##cloudera config
    #config.hive.schema=metastore
    #nifi.executesparkjob.sparkhome=/usr/lib/spark


    ## how often should SLAs be checked
    sla.cron.default=0 0/5 * 1/1 * ? *

    # Additional Hive UDFs for partition functions. Separate multiple functions with commas.
    #kylo.metadata.udfs=

    ### Sqoop import configuration
    # DB Connection password and driver (format: nifi.service.<sqoop controller service name in NiFi>.<key>=<value>
    # Note: Ensure that the driver jar is available in below two locations:
    # (a) sqoop's lib directory (e.g. /usr/hdp/current/sqoop-client/lib/)
    # (b) kylo's lib directory, and owned by 'kylo' user (/opt/kylo/kylo-services/lib)
    #nifi.service.sqoop-mysql-connection.password=hadoop
    #nifi.service.sqoop-mysql-connection.database_driver_class_name=com.mysql.jdbc.Driver
    # Base HDFS landing directory
    #config.sqoop.hdfs.ingest.root=/sqoopimport


    ##uncommenet the settings below for Gmail to work
    #sla.mail.protocol=smtp
    #sla.mail.host=smtp.google.com
    #sla.mail.port=587
    #sla.mail.smtpAuth=true
    #sla.mail.starttls=true

    # Login form authentication
    #security.jwt.algorithm=HS256
    security.jwt.key=<insert-256-bit-secret-key-here>
    #security.rememberme.alwaysRemember=false
    #security.rememberme.cookieDomain=localhost
    #security.rememberme.cookieName=remember-me
    #security.rememberme.parameter=remember-me
    #security.rememberme.tokenValiditySeconds=1209600
    #security.rememberme.useSecureCookie=
    ## if a job fails tell operations manager to query nifi for bulletin information in an attempt to capture more logs about the failure
    kylo.ops.mgr.query.nifi.bulletins=true
    ##when getting aggregate stats back for flows if errors are detected kylo will query NiFi in attempt to capture matching bulletins.
    ## by default this data is stored in memory.  Setting this to true will store the data in the MySQL table
    kylo.ops.mgr.stats.nifi.bulletins.persist=false
    ## if not perisiting (above flag is false) this is the limit to the number of error bulletins per feed.
    ## this is a rolling queue that will keep the last # of errors per feed
    kylo.ops.mgr.stats.nifi.bulletins.mem.size=30

    kylo.feed.mgr.cleanup.timeout=60000

    ## Align the process groups when saving you feed in NiFi.  By default it is set to true.
    #nifi.auto.align=false

    # update database on kylo-services start
    liquibase.enabled=true
    liquibase.change-log=classpath:com/thinkbiganalytics/db/master.xml

    # NiFi settings


    nifi.service.kylo_mysql.database_connection_url=jdbc:mariadb://tba-mysql:3306
    nifi.service.kylo_mysql.database_driver_class_name=org.mariadb.jdbc.Driver
    nifi.service.kylo_mysql.database-driver-locations=file:///usr/nifi/drivers/mariadb-java-client-2.1.0.jar
    nifi.service.kylo_mysql.database_user=root
    nifi.service.kylo_mysql.password=hadoop


    nifi.service.kylo_metadata_service.rest_client_user_name=dladmin

    nifi.service.jmsconnectionfactoryprovider.mq_client_libraries_path_(i.e.,_/usr/jms/lib)=/usr/nifi/activemq
    nifi.service.jmsconnectionfactoryprovider.broker_uri=tcp://tba-activemq:61616


    nifi.service.hive_thrift_service.database_user=root
    nifi.service.hive_thrift_service.password=hadoop

    nifi.executesparkjob[validate_and_split_records].extra_jars=/opt/cloudera/parcels/CDH/lib/hive-hcatalog/share/hcatalog/hive-hcatalog-core.jar,/usr/nifi/drivers/mariadb-java-client-2.1.0.jar
    nifi.executesparkjob[profile_data].extra_jars=/opt/cloudera/parcels/CDH/lib/hive-hcatalog/share/hcatalog/hive-hcatalog-core.jar,/usr/nifi/drivers/mariadb-java-client-2.1.0.jar

    nifi.executesparkjob[validate_and_split_records].spark_configurations=spark.default.parallelism=4
    nifi.executesparkjob[profile_data].spark_configurations=spark.default.parallelism=4

    jms.activemq.broker.url=tcp://tba-activemq:61616


  spark.properties: |-
    ###
    # #%L
    # Spark Shell Core
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    # Server port number
    #server.port = 8450

    # Spark UI port number
    #spark.ui.port = 8450

    # Indicates how to communicate with the Spark Shell process when it is managed
    # externally using an init script or systemd. Comment the below lines to have
    # Kylo manage the Spark Shell process.
    #spark.shell.server.host = localhost
    #spark.shell.server.port = 8450

    spark.shell.deployMode=cluster
    spark.shell.master=yarn
    spark.shell.sparkHome=/opt/cloudera/parcels/SPARK2/lib/spark2
    spark.shell.jars=/opt/kylo/kylo-services/lib/mariadb-java-client-1.5.7.jar
    spark.shell.sparkArgs=--driver-memory 3g --executor-memory 5g --driver-java-options -Djava.security.egd=file:/dev/./urandom
    #spark.shell.registrationUrl=http://192.168.0.20:8420/api/v1/spark/shell/register
    spark.shell.appResource=/opt/kylo/kylo-services/lib/app/kylo-spark-shell-client-v2-0.8.4.jar
    spark.shell.verbose=true
    spark.shell.clientTimeout=240

    kerberos.spark.kerberosEnabled=true
    kerberos.spark.keytabLocation=/etc/security/daf.keytab
    kerberos.spark.kerberosPrincipal=daf@DAF.GOV.IT

  solrsearch.properties: |-
    ###
    # #%L
    # kylo-search-solr
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    # Solr configuration
    search.host=localhost
    search.port=8983
    search.indexStorageDirectory=/tmp/kylosolr
    search.zooKeeperPort=9983


    # This configuration should not require modification
    config.search.solr.url=${search.host}:${search.zooKeeperPort}
    config.search.engine=solr
  users.properties: |-
      ###
      # #%L
      # thinkbig-security-auth-file
      # %%
      # Copyright (C) 2017 ThinkBig Analytics
      # %%
      # Licensed under the Apache License, Version 2.0 (the "License");
      # you may not use this file except in compliance with the License.
      # You may obtain a copy of the License at
      #
      #     http://www.apache.org/licenses/LICENSE-2.0
      #
      # Unless required by applicable law or agreed to in writing, software
      # distributed under the License is distributed on an "AS IS" BASIS,
      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      # See the License for the specific language governing permissions and
      # limitations under the License.
      # #L%

      ###
      # These are the default users available when there is no explicit
      # users file provided in the configuration.
      #
      dladmin=thinkbig
      analyst=analyst
      designer=designer
      operator=operator
  groups.properties: |-
      ###
      # #%L
      # thinkbig-security-auth-file
      # %%
      # Copyright (C) 2017 ThinkBig Analytics
      # %%
      # Licensed under the Apache License, Version 2.0 (the "License");
      # you may not use this file except in compliance with the License.
      # You may obtain a copy of the License at
      #
      #     http://www.apache.org/licenses/LICENSE-2.0
      #
      # Unless required by applicable law or agreed to in writing, software
      # distributed under the License is distributed on an "AS IS" BASIS,
      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      # See the License for the specific language governing permissions and
      # limitations under the License.
      # #L%

      ###
      # These are the default group assignments when there is no explicit
      # group file provided in the configuration.
      #
      dladmin=admin,user
      analyst=analyst,user
      designer=designer,user
      operator=operations,user
  metadata-repository.json: |-
    {
        "name" : "metadata-repository",
        "node-types" : ["metadata-schema.cnd", "users-schema.cnd"],
        "workspaces" : {
            "predefined" : ["metadata"],
            "default" : "default",
            "allowCreation" : true
        },
        "security" : {
            "anonymous" : {
                "username" : "<anonymous>",
                "roles" : ["readonly"],
                "useOnFailedLogin" : false
            },
            "providers" : [
                {
                    "name" : "Spring Security-Based Provider",
                    "classname" : "com.thinkbiganalytics.metadata.modeshape.security.SpringAuthenticationProvider"
                },
                {
                    "name" : "Override Provider",
                    "classname" : "com.thinkbiganalytics.metadata.modeshape.security.OverrideAuthenticationProvider"
                },
                {
                    "name" : "DB Admin Provider",
                    "classname" : "com.thinkbiganalytics.metadata.modeshape.security.AdminAuthenticationProvider"
                }
            ]
        },
        "indexProviders": {
            "local": {
                "classname": "org.modeshape.jcr.index.local.LocalIndexProvider",
                "directory": "${modeshape.index.dir}"
            }
        },
        "indexes": {
            "feedModificationDate": {
                "kind": "value",
                "provider": "local",
                "nodeType": "tba:feed",
                "columns": "jcr:lastModified(DATE)"
            },
            "feedState": {
                "kind": "value",
                "provider": "local",
                "nodeType": "tba:feedData",
                "columns": "tba:state(NAME)"
            },
            "categoryName": {
                "kind": "value",
                "provider": "local",
                "nodeType": "tba:category",
                "columns": "tba:systemName(STRING)"
            },
            "titleIndex": {
                "kind": "value",
                "provider": "local",
                "nodeType": "mix:title",
                "columns": "jcr:title(STRING)"
            },
            "nodesByName": {
                "kind": "value",
                "provider": "local",
                "synchronous": "true",
                "nodeType": "nt:base",
                "columns": "jcr:name(NAME)"
            },
            "nodesByDepth": {
                "kind": "value",
                "provider": "local",
                "synchronous": "true",
                "nodeType": "nt:base",
                "columns": "mode:depth(LONG)"
            },
            "nodesByPath": {
                "kind": "value",
                "provider": "local",
                "synchronous": "true",
                "nodeType": "nt:base",
                "columns": "jcr:path(PATH)"
            },
            "nodeTypes": {
                "kind": "nodeType",
                "provider": "local",
                "nodeType": "nt:base",
                "columns": "jcr:primaryType(STRING)"
            }
        },
        "storage": {
            "persistence" : {
                "type" : "db",
                "connectionUrl": "${modeshape.datasource.url}",
                "driver": "${modeshape.datasource.driverClassName}",
                "username": "${modeshape.datasource.username}",
                "password": "${modeshape.datasource.password}",
                "poolSize" : 5,
                "maximumPoolSize" : 20,
                "createOnStart" : true,
                "dropOnExit" : false
            },
            "binaryStorage" : {
                "type" : "file",
                "directory": "/var/thinkbig/modeshape",
                "minimumBinarySizeInBytes" : 5000000
            }
        },
        "garbageCollection" : {
            "initialTime": "17:00"
        }
    }
  elasticsearch-rest.properties: |-
    ###
    # #%L
    # kylo-search-elasticsearch-rest
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    # Elasticsearch (rest client) configuration
    search.rest.host=master.elasticsearch.daf.gov.it
    search.rest.port=9200


    # This configuration should not require modification
    config.search.es.rest.url=http://${search.rest.host}:${search.rest.port}
    config.search.engine=elasticsearch
  elasticsearch.properties: |-
    ###
    # #%L
    # kylo-search-elasticsearch
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    # Elasticsearch configuration
    search.host=master.elasticsearch.daf.gov.it
    search.clusterName=demo-cluster
    search.restPort=9200
    search.transportPort=9300


    # This configuration should not require modification
    config.search.engine=elasticsearch
  log4j.properties: |-
    ###
    # #%L
    # thinkbig-service-app
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    # Root logger option
    log4j.rootLogger=INFO, file
    log4j.logger.com.thinkbiganalytics=INFO
    log4j.logger.org=WARN
    ##log4j.logger.org.modeshape.jcr.clustering.ClusteringService=DEBUG
    ##log4j.logger.org.jgroups=DEBUG
    ##log4j.logger.org.hibernate.SQL=DEBUG

    # Direct log messages to a log file
    log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.myAppender.DatePattern='.'yyyy-MM-dd
    log4j.appender.file.File=/var/log/kylo-services/kylo-services.log
    log4j.appender.file.append=true
    log4j.appender.file.layout=org.apache.log4j.PatternLayout
    log4j.appender.file.Threshold=DEBUG
    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %t:%c{1}:%L - %m%n
  log4j-spark.properties: |-
    ###
    # #%L
    # thinkbig-spark-shell-client-app
    # %%
    # Copyright (C) 2017 ThinkBig Analytics
    # %%
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    # #L%
    ###
    # Set everything to be logged to the console
    log4j.rootCategory=INFO, file

    # Settings to quiet third party logs that are too verbose
    log4j.logger.org.eclipse.jetty=WARN
    log4j.logger.org.eclipse.jetty.util.component.AbstractLifeCycle=ERROR
    log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=INFO
    log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=INFO

    log4j.logger.com.thinkbiganalytics=INFO
    log4j.logger.com.thinkbiganalytics.spark.repl.SparkScriptEngine$1=ERROR

    log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
    log4j.appender.myAppender.DatePattern='.'yyyy-MM-dd
    log4j.appender.file.File=/var/log/kylo-services/kylo-spark-shell.log
    log4j.appender.file.append=true
    log4j.appender.file.layout=org.apache.log4j.PatternLayout
    log4j.appender.file.Threshold=INFO
    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %t:%c{1}:%L - %m%n
  datasource-definitions.json: |+
    [
      {
        "processorType": "datatransformation.template",
        "datasourcePropertyKeys": [
          "schema",
          "table"
        ],
        "datasourceType": "HiveDatasource",
        "connectionType": "SOURCE",
        "identityString": "${schema}.${table}"
      },
      {
        "processorType": "org.apache.nifi.jms.processors.ConsumeJMS",
        "datasourcePropertyKeys": [
          "Destination Name"
        ],
        "datasourceType": "JMSDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.kafka.pubsub.ConsumeKafka",
        "datasourcePropertyKeys": [
          "Topic Name(s)"
        ],
        "datasourceType": "KafkaDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.amqp.processors.ConsumeAMQP",
        "datasourcePropertyKeys": [
          "Queue"
        ],
        "datasourceType": "JMSDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.FetchFile",
        "datasourcePropertyKeys": [
          "File to Fetch"
        ],
        "datasourceType": "DirectoryDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.hadoop.FetchHDFS",
        "datasourcePropertyKeys": [
          "HDFS Filename"
        ],
        "datasourceType": "HDFSDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.aws.s3.FetchS3Object",
        "datasourcePropertyKeys": [
          "Bucket",
          "Object Key"
        ],
        "datasourceType": "S3Datasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.FetchSFTP",
        "datasourcePropertyKeys": [
          "Hostname",
          "Remote File"
        ],
        "datasourceType": "FTPDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.GetFile",
        "datasourcePropertyKeys":["Input Directory","File Filter"],
        "datasourceType":"DirectoryDatasource",
        "connectionType":"SOURCE",
        "identityString":"${Input Directory}/${File Filter}",
        "description":" Directory or File source"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.GetFTP",
        "datasourcePropertyKeys": [
          "Hostname",
          "RemotePath",
          "Path Filter Regex",
          "File Filter Regex"
        ],
        "datasourceType": "FTPDatasource",
        "connectionType": "SOURCE",
        "title": "${Hostname}"
      },
      {
        "processorType": "org.apache.nifi.hbase.GetHBase",
        "datasourcePropertyKeys": [
          "HBase Client Service",
          "Table Name"
        ],
        "datasourceType": "HBaseDatasource",
        "connectionType": "SOURCE",
        "title": "${Table Name}"
      },
      {
        "processorType": "org.apache.nifi.processors.hadoop.GetHDFS",
        "datasourcePropertyKeys": [
          "Directory",
          "File Filter Regex"
        ],
        "datasourceType": "HDFSDatasource",
        "connectionType": "SOURCE",
        "title": "${Directory}"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.GetHTTP",
        "datasourcePropertyKeys": [
          "URL",
          "File Name"
        ],
        "datasourceType": "HTTPDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.GetJMSQueue",
        "datasourcePropertyKeys": [
          "URL",
          "Destination Name"
        ],
        "connectionType": "SOURCE",
        "datasourceType": "JMSDatasource",
        "title": "Queue: ${Destination Name}"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.GetJMSTopic",
        "datasourcePropertyKeys": [
          "URL",
          "Destination Name"
        ],
        "datasourceType": "JMSDatasource",
        "connectionType": "SOURCE",
        "title": "${Destination Name}",
        "identityString": "Topic: ${Destination Name}"
      },
      {
        "processorType": "org.apache.nifi.processors.kafka.GetKafka",
        "datasourcePropertyKeys": [
          "ZooKeeper Connection String",
          "Topic Name"
        ],
        "datasourceType": "KafkaDatasource",
        "connectionType": "SOURCE",
        "title": "${Topic Name}"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.GetSFTP",
        "datasourcePropertyKeys": [
          "Hostname",
          "File Filter Regex",
          "Path Filter Regex"
        ],
        "datasourceType": "FTPDatasource",
        "connectionType": "SOURCE",
        "title": "${Hostname}"
      },
      {
        "processorType":"com.thinkbiganalytics.nifi.v2.ingest.GetTableData",
        "datasourcePropertyKeys":["Source Table","Source Database Connection"],
        "datasourceType":"DatabaseDatasource",
        "connectionType":"SOURCE",
        "identityString":"${Source Table} - ${Source Database Connection}",
        "title":"${Source Table}"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.ListenHTTP",
        "datasourcePropertyKeys": [
          "Base Path"
        ],
        "datasourceType": "HTTPDatasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType": "org.apache.nifi.processors.aws.s3.ListS3",
        "datasourcePropertyKeys": [
          "Bucket",
          "Region"
        ],
        "datasourceType": "S3Datasource",
        "connectionType": "SOURCE"
      },
      {
        "processorType":"com.thinkbiganalytics.nifi.v2.ingest.MergeTable",
        "datasourcePropertyKeys":["Target schema","Target table"],
        "datasourceType":"HiveDatasource",
        "connectionType":"DESTINATION",
        "identityString":"${Target schema}.${Target table}"
      },
      {
        "processorType": "org.apache.nifi.processors.standard.PutFile",
        "datasourcePropertyKeys": [
          "Directory"
        ],
        "datasourceType": "DirectoryDatasource",
        "connectionType": "DESTINATION",
        "title": "${Directory}"
      },
      {
        "processorType": "org.apache.nifi.processors.hadoop.PutHDFS",
        "datasourcePropertyKeys": [
          "Directory"
        ],
        "datasourceType": "HDFSDatasource",
        "connectionType": "DESTINATION",
        "title": "${Directory}"
      },
      {
        "processorType": "com.thinkbiganalytics.nifi.v2.sqoop.core.ImportSqoop",
        "datasourcePropertyKeys": [
          "Source Table"
        ],
        "datasourceType": "DatabaseDatasource",
        "connectionType": "SOURCE"
      }
    ]

  datasource-styles.json: |-
    {
        "feed": {
          "shape": "icon",
          "icon": {
            "code": "\uf1e1",
            "color": "#3483BA"
          },
          "size": 40
        },
        "currentFeed": {
          "shape": "icon",
          "icon": {
            "code": "\uf1e1",
            "color": "#F08C38",
            "size": 50
          },
          "font": {
            "size": 18
          }
        },
       "S3Datasource": {
         "shape": "icon",
         "icon": {
           "code": "\uf270",
           "color": "#607D8B"
         }
       },
        "DirectoryDatasource": {
          "shape": "icon",
          "icon": {
            "code": "\uf15b",
            "color": "#607D8B"
          }
        },
        "HiveDatasource": {
          "shape": "icon",
          "icon": {
            "code": "\uf0ce",
            "color": "#97C2FC"
          }
        },
        "DatabaseDatasource": {
          "shape": "icon",
          "color": "#E4682C",
          "icon": {
            "code": "\uf0ce",
            "color": "#E4682C"
          }
        }
    }
  icon-colors.json: |-
    [
      {
        "name": "Purple",
        "color": "#AB47BC"
      },
      {
        "name": "Orange",
        "color": "#FFCA28"
      },
      {
        "name": "Deep Orange",
        "color": "#FF8A65"
      },
      {
        "name": "Red",
        "color": "#FF5252"
      },
      {
        "name": "Blue",
        "color": "#90CAF9"
      },
      {
        "name": "Green",
        "color": "#66BB6A"
      },
      {
        "name": "Blue Grey",
        "color": "#90A4AE"
      },
      {
        "name": "Teal",
        "color": "#80CBC4"
      },
      {
        "name": "Pink",
        "color": "#F06292"
      },
      {
        "name": "Yellow",
        "color": "#FFF176"
      }
    ]
  icons.json: |-
    [
      "amazon",
      "apple",
      "facebook-box",
      "facebook-messenger",
      "facebook",
      "github-box",
      "github-circle",
      "google-plus-box",
      "google-plus",
      "hangouts",
      "linkedin-box",
      "linkedin",
      "login",
      "logout",
      "office",
      "twitter",
      "whatsapp",
      "windows",
      "signal_wifi_0_bar",
      "signal_wifi_1_bar",
      "signal_wifi_2_bar",
      "signal_wifi_3_bar",
      "signal_cellular_connected_no_internet_0_bar",
      "signal_cellular_connected_no_internet_1_bar",
      "signal_cellular_connected_no_internet_2_bar",
      "signal_cellular_connected_no_internet_3_bar",
      "signal_cellular_0_bar",
      "signal_cellular_1_bar",
      "signal_cellular_2_bar",
      "signal_cellular_3_bar",
      "now_wallpaper",
      "now_widgets",
      "battery_20",
      "battery_30",
      "battery_50",
      "battery_60",
      "battery_80",
      "battery_90",
      "battery_alert",
      "battery_charging_20",
      "battery_charging_30",
      "battery_charging_50",
      "battery_charging_60",
      "battery_charging_80",
      "battery_charging_90",
      "account_child",
      "3d_rotation",
      "accessibility",
      "accessible",
      "account_balance",
      "account_balance_wallet",
      "account_box",
      "account_circle",
      "add_shopping_cart",
      "alarm",
      "alarm_add",
      "alarm_off",
      "alarm_on",
      "all_out",
      "android",
      "announcement",
      "aspect_ratio",
      "assessment",
      "assignment",
      "assignment_ind",
      "assignment_late",
      "assignment_return",
      "assignment_returned",
      "assignment_turned_in",
      "autorenew",
      "backup",
      "book",
      "bookmark",
      "bookmark_outline",
      "bug_report",
      "build",
      "cached",
      "camera_enhanced",
      "card_giftcard",
      "card_membership",
      "card_travel",
      "change_history",
      "check_circle",
      "chrome_reader_mode",
      "class",
      "code",
      "compare_arrows",
      "copyright",
      "credit_card",
      "dashboard",
      "date_range",
      "delete",
      "delete_forever",
      "description",
      "dns",
      "done",
      "done_all",
      "donut_large",
      "donut_small",
      "eject",
      "euro_symbol",
      "event",
      "event_seat",
      "exit_to_app",
      "explore",
      "extension",
      "face",
      "favorite",
      "favorite_border",
      "feedback",
      "find_in_page",
      "find_replace",
      "fingerprint",
      "flight_land",
      "flight_takeoff",
      "flip_to_back",
      "flip_to_front",
      "g_translate",
      "gavel",
      "get_app",
      "gif",
      "grade",
      "group_work",
      "help",
      "help_outline",
      "highlight_off",
      "history",
      "home",
      "hourglass_empty",
      "hourglass_full",
      "http",
      "https",
      "important_devices",
      "info",
      "info_outline",
      "input",
      "invert_colors",
      "label",
      "label_outline",
      "language",
      "launch",
      "lightbulb_outline",
      "line_style",
      "line_weight",
      "list",
      "lock",
      "lock_open",
      "lock_outline",
      "loyalty",
      "markunread_mailbox",
      "motorcycle",
      "note_add",
      "offline_pin",
      "opacity",
      "open_in_browser",
      "open_in_new",
      "open_with",
      "pageview",
      "pan_tool",
      "payment",
      "perm_camera_mic",
      "perm_contact_calendar",
      "perm_data_setting",
      "perm_device_information",
      "perm_identity",
      "perm_media",
      "perm_phone_msg",
      "perm_scan_wifi",
      "pets",
      "picture_in_picture",
      "picture_in_picture_alt",
      "play_for_work",
      "polymer",
      "power_settings_new",
      "pregnant_woman",
      "print",
      "query_builder",
      "question_answer",
      "receipt",
      "record_voice_over",
      "redeem",
      "remove_shopping_cart",
      "reorder",
      "report_problem",
      "restore",
      "restore_page",
      "room",
      "rounded_corner",
      "rowing",
      "schedule",
      "search",
      "settings",
      "settings_applications",
      "settings_backup_restore",
      "settings_bluetooth",
      "settings_brightness",
      "settings_cell",
      "settings_ethernet",
      "settings_input_antenna",
      "settings_input_component",
      "settings_input_composite",
      "settings_input_hdmi",
      "settings_input_svideo",
      "settings_overscan",
      "settings_phone",
      "settings_power",
      "settings_remote",
      "settings_voice",
      "shop",
      "shop_two",
      "shopping_basket",
      "shopping_cart",
      "speaker_notes",
      "speaker_notes_off",
      "spellcheck",
      "star_rate",
      "stars",
      "store",
      "subject",
      "supervisor_account",
      "swap_horiz",
      "swap_vert",
      "swap_vertial_circle",
      "system_update_alt",
      "tab",
      "tab_unselected",
      "theaters",
      "thumb_down",
      "thumb_up",
      "thumbs_up_down",
      "timeline",
      "toc",
      "today",
      "toll",
      "touch_app",
      "track_changes",
      "translate",
      "trending_down",
      "trending_flat",
      "trending_up",
      "turned_in",
      "turned_in_not",
      "update",
      "verified_user",
      "view_agenda",
      "view_array",
      "view_carousel",
      "view_column",
      "view_day",
      "view_headline",
      "view_list",
      "view_module",
      "view_quilt",
      "view_stream",
      "view_week",
      "visibility",
      "visibility_off",
      "watch_later",
      "work",
      "youtube_searched_for",
      "zoom_in",
      "zoom_out",
      "add_alert",
      "error",
      "error_outline",
      "warning",
      "add_to_queue",
      "airplay",
      "album",
      "art_track",
      "av_timer",
      "branding_watermark",
      "call_to_action",
      "closed_caption",
      "equalizer",
      "explicit",
      "fast_forward",
      "fast_rewind",
      "featured_play_list",
      "featured_video",
      "fibre_dvr",
      "fiber_manual_record",
      "fibre_new",
      "fibre_pin",
      "fibre_smart_record",
      "forward_10",
      "forward_30",
      "forward_5",
      "games",
      "hd",
      "hearing",
      "high_quality",
      "my_library_add",
      "my_library_books",
      "my_library_music",
      "loop",
      "mic",
      "mic_none",
      "mic_off",
      "movie",
      "music_video",
      "new_releases",
      "not_interested",
      "note",
      "pause",
      "pause_circle_filled",
      "pause_circle_outline",
      "play_arrow",
      "play_circle_fill",
      "play_circle_outline",
      "playlist_add",
      "playlist_add_check",
      "playlist_play",
      "queue",
      "queue_music",
      "queue_play_next",
      "radio",
      "recent_actors",
      "remove_from_queue",
      "repeat",
      "repeat_one",
      "replay",
      "replay_10",
      "replay_30",
      "replay_5",
      "shuffle",
      "skip_next",
      "skip_previous",
      "slow_motion_video",
      "snooze",
      "sort_by_alpha",
      "stop",
      "subscriptions",
      "subtitles",
      "surround_sound",
      "video_call",
      "video_label",
      "video_library",
      "videocam",
      "videocam_off",
      "volume_down",
      "volume_mute",
      "volume_off",
      "volume_up",
      "web",
      "web_asset",
      "business",
      "call",
      "call_end",
      "call_made",
      "call_merge",
      "call_missed",
      "call_missed_outgoing",
      "call_received",
      "call_split",
      "chat",
      "chat_bubble",
      "chat_bubble_outline",
      "clear_all",
      "comment",
      "contact_mail",
      "contact_phone",
      "contacts",
      "dialer_sip",
      "dialpad",
      "email",
      "forum",
      "import_contacts",
      "import_export",
      "invert_colors_off",
      "live_help",
      "location_off",
      "location_on",
      "mail_outline",
      "message",
      "no_sim",
      "phone",
      "phonelink_erase",
      "phonelink_lock",
      "phonelink_ring",
      "phonelink_setup",
      "portable_wifi_off",
      "present_to_all",
      "ring_volume",
      "rss_feed",
      "screen_share",
      "stay_current_landscape",
      "stay_current_portrait",
      "stay_primary_landscape",
      "stay_primary_portrait",
      "stop_screen_share",
      "swap_calls",
      "textsms",
      "voicemail",
      "vpn_key",
      "add",
      "add_box",
      "add_circle",
      "add_circle_outline",
      "archive",
      "backspace",
      "block",
      "clear",
      "content_copy",
      "content_cut",
      "content_paste",
      "create",
      "delete_sweep",
      "drafts",
      "filter_list",
      "flag",
      "font_download",
      "forward",
      "gesture",
      "inbox",
      "link",
      "low_priority",
      "mail",
      "markunread",
      "move_to_inbox",
      "next_week",
      "redo",
      "remove",
      "remove_circle",
      "remove_circle_outline",
      "reply",
      "reply_all",
      "report",
      "save",
      "select_all",
      "send",
      "sort",
      "text_format",
      "unarchive",
      "undo",
      "weekend",
      "access_alarms",
      "access_alarm",
      "access_time",
      "add_alarm",
      "airplanemode_on",
      "airplanemode_inactive",
      "battery_charging_full",
      "battery_full",
      "battery_std",
      "battery_unknown",
      "bluetooth",
      "bluetooth_connected",
      "bluetooth_disabled",
      "bluetooth_searching",
      "brightness_auto",
      "brightness_high",
      "brightness_low",
      "brightness_medium",
      "data_usage",
      "developer_mode",
      "devices",
      "dvr",
      "gps_fixed",
      "gps_not_fixed",
      "gps_off",
      "graphic_eq",
      "location_disabled",
      "location_searching",
      "network_cell",
      "network_wifi",
      "nfc",
      "screen_lock_landscape",
      "screen_lock_portrait",
      "screen_lock_rotation",
      "screen_rotation",
      "sd_storage",
      "settings_system_daydream",
      "signal_cellular_4_bar",
      "signal_cellular_connected_no_internet_4_bar",
      "signal_cellular_no_sim",
      "signal_cellular_null",
      "signal_cellular_off",
      "signal_wifi_4_bar",
      "signal_wifi_4_bar_lock",
      "signal_wifi_off",
      "storage",
      "usb",
      "wallpaper",
      "wifi_lock",
      "wifi_tethering",
      "attach_file",
      "attach_money",
      "border_all",
      "border_bottom",
      "border_clear",
      "border_color",
      "border_horizontal",
      "border_inner",
      "border_left",
      "border_outer",
      "border_right",
      "border_style",
      "border_top",
      "border_vertical",
      "bubble_chart",
      "drag_handle",
      "format_align_center",
      "format_align_justify",
      "format_align_left",
      "format_align_right",
      "format_bold",
      "format_clear",
      "format_color_fill",
      "format_color_reset",
      "format_color_text",
      "format_indent_decrease",
      "format_indent_increase",
      "format_italic",
      "format_line_spacing",
      "format_list_bulleted",
      "format_list_numbered",
      "format_paint",
      "format_quote",
      "format_shapes",
      "format_size",
      "format_strikethrough",
      "format_textdirection_l_to_r",
      "format_textdirection_r_to_l",
      "format_underline",
      "functions",
      "highlight",
      "insert_chart",
      "insert_comment",
      "insert_drive_file",
      "insert_emoticon",
      "insert_invitation",
      "insert_link",
      "insert_photo",
      "linear_scale",
      "merge_type",
      "mode_comment",
      "mode_edit",
      "monetization_on",
      "money_off",
      "multiline_chart",
      "pie_chart",
      "pie_chart_outline",
      "publish",
      "short_text",
      "show_chart",
      "space_bar",
      "strikethrough_s",
      "text_fields",
      "title",
      "vertical_align_bottom",
      "vertical_align_center",
      "vertical_align_top",
      "wrap_text",
      "attachment",
      "cloud",
      "cloud_circle",
      "cloud_done",
      "cloud_download",
      "cloud_off",
      "cloud_queue",
      "cloud_upload",
      "create_new_folder",
      "file_download",
      "file_upload",
      "folder",
      "folder_open",
      "folder_shared",
      "cast",
      "cast_connected",
      "computer",
      "desktop_mac",
      "desktop_windows",
      "developer_dashboard",
      "device_hub",
      "devices_other",
      "dock",
      "gamepad",
      "headset",
      "headset_mic",
      "keyboard",
      "keyboard_arrow_down",
      "keyboard_arrow_left",
      "keyboard_arrow_right",
      "keyboard_arrow_up",
      "keyboard_backspace",
      "keyboard_capslock",
      "keyboard_hide",
      "keyboard_return",
      "keyboard_tab",
      "keyboard_voice",
      "laptop",
      "laptop_chromebook",
      "laptop_mac",
      "laptop_windows",
      "memory",
      "mouse",
      "phone_android",
      "phone_iphone",
      "phonelink",
      "phonelink_off",
      "power_input",
      "router",
      "scanner",
      "security",
      "sim_card",
      "smartphone",
      "speaker",
      "speaker_group",
      "tablet",
      "tablet_android",
      "tablet_mac",
      "toys",
      "tv",
      "vidiogame_asset",
      "watch",
      "add_a_photo",
      "add_to_photos",
      "adjust",
      "assistant_photo",
      "audiotrack",
      "blur_circular",
      "blur_linear",
      "blur_off",
      "blur_on",
      "brightness_1",
      "brightness_2",
      "brightness_3",
      "brightness_4",
      "brightness_5",
      "brightness_6",
      "brightness_7",
      "broken_image",
      "brush",
      "burst_mode",
      "camera",
      "camera_alt",
      "camera_front",
      "camera_rear",
      "camera_roll",
      "center_focus_strong",
      "center_focus_weak",
      "collections",
      "collections_bookmark",
      "color_lens",
      "colorize",
      "compare",
      "control_point",
      "control_point_duplicate",
      "crop",
      "crop_16_9",
      "crop_3_2",
      "crop_5_4",
      "crop_7_5",
      "crop_din",
      "crop_free",
      "crop_landscape",
      "crop_original",
      "crop_portrait",
      "crop_rotate",
      "crop_square",
      "dehaze",
      "details",
      "edit",
      "exposure",
      "exposure_neg_1",
      "exposure_neg_2",
      "exposure_plus_1",
      "exposure_plus_2",
      "exposure_zero",
      "filter",
      "filter_1",
      "filter_2",
      "filter_3",
      "filter_4",
      "filter_5",
      "filter_6",
      "filter_7",
      "filter_8",
      "filter_9",
      "filter_9_plus",
      "filter_b_and_w",
      "filter_center_focus",
      "filter_drama",
      "filter_frames",
      "filter_hdr",
      "filter_none",
      "filter_tilt_shift",
      "filter_vintage",
      "flare",
      "flash_auto",
      "flash_off",
      "flash_on",
      "flip",
      "gradient",
      "grain",
      "grid_off",
      "grid_on",
      "hdr_off",
      "hdr_on",
      "hdr_strong",
      "hdr_weak",
      "healing",
      "image",
      "image_aspect_ratio",
      "iso",
      "landscape",
      "leak_add",
      "leak_remove",
      "lens",
      "linked_camera",
      "looks",
      "looks_3",
      "looks_4",
      "looks_5",
      "looks_6",
      "looks_one",
      "looks_two",
      "loupe",
      "monochrome_photos",
      "movie_creation",
      "movie_filter",
      "music_note",
      "nature",
      "nature_people",
      "navigate_before",
      "navigate_next",
      "palette",
      "panorama",
      "panorama_fisheye",
      "panorama_horizontal",
      "panorama_vertical",
      "panorama_wide_angle",
      "photo",
      "photo_album",
      "photo_camera",
      "photo_filter",
      "photo_library",
      "photo_size_select_actual",
      "photo_size_select_large",
      "photo_size_select_small",
      "picture_as_pdf",
      "portrait",
      "remove_red_eye",
      "rotate_90_degrees_ccw",
      "rotate_left",
      "rotate_right",
      "slideshow",
      "straighten",
      "style",
      "switch_camera",
      "switch_video",
      "tag_faces",
      "texture",
      "timelapse",
      "timer",
      "timer_10",
      "timer_3",
      "timer_off",
      "tonality",
      "transform",
      "tune",
      "view_comfy",
      "view_compact",
      "vignette",
      "wb_auto",
      "wb_cloudy",
      "wb_incandescent",
      "wb_irradescent",
      "wb_sunny",
      "add_location",
      "beenhere",
      "directions",
      "directions_bike",
      "directions_bus",
      "directions_car",
      "directions_ferry",
      "directions_subway",
      "directions_train",
      "directions_transit",
      "directions_walk",
      "edit_location",
      "ev_station",
      "flight",
      "hotel",
      "layers",
      "layers_clear",
      "local_activity",
      "local_airport",
      "local_atm",
      "local_bar",
      "local_cafe",
      "local_car_wash",
      "local_convenience_store",
      "local_dining",
      "local_drink",
      "local_florist",
      "local_gas_station",
      "local_grocery_store",
      "local_hospital",
      "local_hotel",
      "local_laundry_service",
      "local_library",
      "local_mall",
      "local_movies",
      "local_offer",
      "local_parking",
      "local_pharmacy",
      "local_phone",
      "local_pizza",
      "local_play",
      "local_post_office",
      "local_print_shop",
      "local_restaurant",
      "local_see",
      "local_shipping",
      "local_taxi",
      "map",
      "my_location",
      "navigation",
      "near_me",
      "person_pin_circle",
      "person_pin",
      "pin_drop",
      "place",
      "rate_review",
      "restaurant",
      "restaurant_menu",
      "satellite",
      "store_mall_directory",
      "streetview",
      "subway",
      "terrain",
      "traffic",
      "train",
      "tram",
      "transfer_within_a_station",
      "zoom_out_map",
      "apps",
      "arrow_back",
      "arrow_downward",
      "arrow_drop_down",
      "arrow_drop_down_circle",
      "arrow_drop_up",
      "arrow_forward",
      "arrow_upwards",
      "cancel",
      "check",
      "chevron_left",
      "chevron_right",
      "close",
      "expand_less",
      "expand_more",
      "first_page",
      "fullscreen",
      "fullscreen_exit",
      "last_page",
      "menu",
      "more_horiz",
      "more_vert",
      "refresh",
      "subdirectory_arrow_left",
      "subdirectory_arrow_right",
      "adb",
      "airline_seat_flat",
      "airline_seat_angled",
      "airline_seat_individual_suite",
      "airline_seat_legroom_extra",
      "airline_seat_legroom_normal",
      "airline_seat_legroom_reduced",
      "airline_seat_recline_extra",
      "airline_seat_recline_normal",
      "bluetooth_audio",
      "confirmation_number",
      "disc_full",
      "do_not_disturb",
      "do_not_disturb_alt",
      "do_not_disturb_off",
      "do_not_disturb_on",
      "drive_eta",
      "enhanced_encryption",
      "event_available",
      "event_busy",
      "event_note",
      "folder_special",
      "live_tv",
      "mms",
      "more",
      "network_check",
      "network_locked",
      "no_encryption",
      "ondemand_video",
      "personal_video",
      "phone_bluetooth_speaker",
      "phone_forwarded",
      "phone_in_talk",
      "phone_locked",
      "phone_missed",
      "phone_paused",
      "power",
      "priority_high",
      "sd_card",
      "sim_card_alert",
      "sms",
      "sms_failed",
      "sync",
      "sync_disabled",
      "sync_problem",
      "system_update",
      "tap_and_play",
      "time_to_leave",
      "vibration",
      "voice_chat",
      "vpn_lock",
      "wc",
      "wifi",
      "ac_unit",
      "airport_shuttle",
      "all_inclusive",
      "beach_access",
      "business_center",
      "casino",
      "child_care",
      "child_friedly",
      "fitness_center",
      "free_breakfast",
      "golf_course",
      "hot_tub",
      "kitchen",
      "pool",
      "room_service",
      "rv_hookup",
      "smoke_free",
      "smoke_rooms",
      "spa",
      "cake",
      "domain",
      "group",
      "group_add",
      "location_city",
      "mood",
      "mood_bad",
      "notifications",
      "notifications_none",
      "notifications_off",
      "notifications_active",
      "notifications_paused",
      "pages",
      "party_mode",
      "people",
      "people_outline",
      "person",
      "person_add",
      "person_outline",
      "plus_one",
      "poll",
      "public",
      "school",
      "sentiment_dissatisfied",
      "sentiment_neutral",
      "sentiment_satisfied",
      "sentiment_very_dissatisfied",
      "sentiment_very_satisfied",
      "share",
      "whatshot",
      "check_box",
      "check_box_outline_blank",
      "indeterminate_check_box",
      "radio_button_unchecked",
      "radio_button_checked",
      "star",
      "star_half",
      "star_border"
    ]
  version.txt: |-
    version=0.8.4
    build.date=2017-10-18 17:13
